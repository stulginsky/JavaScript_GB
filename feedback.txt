1 -
Переменные именуем с маленькой буквы, с большой в будущем будем писать 
функции-конструкторы и классы.
Когда выводите расчитываемые значения пользователю - округляйте. Попробуйте ввести 21, 
посмотрите на результат, мы получим число 69.80000000000001. 
JavaScript не всегда может "правильно" посчитать некоторые операции, 
все из-за особенностей рассчетов, которые используются в языке 
(такое во многих языках встречается). Чтобы округлить число, можно использовать метод 
Math.round, например:
Math.round(num) округлит до целого числа по правилам математики.
Если мы хотим чтобы округление было до определенного знака после запятой, 
например, хотим 2 знака после запятой иметь (если они не нули), 
то можем пойти на хитрость, сначала умножить на 100 число, округлить его и потом поделить на 100:

const PI = 3.14159265359;
console.log(Math.round(PI * 100) / 100); // 3.14
При умножении на 100, мы получаем число 314.159265359, затем округляем 
по правилам математики, остается 314, после чего делим на 100 и получаем 3.14.
Либо, если мы выводим пользователю результат в строку, то можно превратить 
число в строку округлив до определенного количества знаков дробной части, 
например num.toFixed(2) округлит до 2-х чисел в дробной части числа значение 
переменной num.
Не советую вычисления вставлять в строки, как во втором варианте, особенно 
вычисления с несколькими действиями. Строка начинает плохо читаться. Лучше 
заранее посчитать все что нужно, сохранить все значения в переменные и после 
этого уже вставить эти значения из переменных в строку.
Переменные лучше называть более практично, чтобы по названию переменной 
было понятно что в ней лежит. Если называть все переменные сокращенно, 
то в итоге запутаешься в них. (знаю что здесь всего 2 переменные и где здесь путаться, 
это на будущее :))
Если вы ждете от пользователя число, при этом не проверяя что он ввел, 
то лучше сразу приводить его ввод в число (в prompt мы изначально получаем строку, 
странно температуру хранить в виде строки), вместо prompt лучше написать +prompt 
или Number.parseFloat(prompt(...)), чтобы сразу получить число.
Если вам надо собрать строку с переменными, то лучше использовать обратные кавычки, 
как во втором варианте, с ними собрать строку проще, чем приклеивать переменные 
через плюсы (в данном случае конечно не сложно но я на будущее).
2 - Идеально.
3 - У комментариев отступ должен быть такой же как у кода.
В последнем примере 10 / +"2,5" мы должны получить NaN потому, 
что невозможно превратить значение "2,5" в число, 
из-за того что разделитель дробной части внутри - 
запятая, а должна быть точка, верно написали.
Стоит добавить что из-за этого мы получаем NaN в выражении +"2,5", 
а при любых арифметических операциях с NaN мы всегда получаем NaN, 
то есть 10 / NaN получим NaN.
4 - Шикарно сделали.